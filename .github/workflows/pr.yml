name: PR updated â†’ dispatch to coding agent

on:
  pull_request:
    types: [opened, reopened, synchronize, ready_for_review, edited]

permissions:
  contents: read
  pull-requests: read

concurrency:
  group: pr-${{ github.event.pull_request.number }}-dispatch
  cancel-in-progress: true

jobs:
  dispatch:
    # Require: internal actor, not a fork, and PR targets main (tweak branch if needed)
    if: ${{ !github.event.pull_request.head.repo.fork
           && contains(fromJSON('["MEMBER","OWNER","COLLABORATOR"]'), github.event.pull_request.author_association)
           && github.event.pull_request.base.ref == 'main' }}
    runs-on: ubuntu-latest
    timeout-minutes: 5

    steps:
      - name: Build payload
        id: payload
        run: |
          jq -n \
            --arg repo "${{ github.repository }}" \
            --argjson pr ${{ github.event.pull_request.number }} \
            --arg sha "${{ github.event.pull_request.head.sha }}" \
            --arg url "${{ github.event.pull_request.html_url }}" \
            --arg head_repo "${{ github.event.pull_request.head.repo.full_name }}" \
            --arg head_ref "${{ github.event.pull_request.head.ref }}" \
            --arg base_ref "${{ github.event.pull_request.base.ref }}" \
            '{event_type:"coding_agent_dispatch",
              client_payload:{repo:$repo,pr:$pr,pr_head_sha:$sha,pr_html_url:$url,
                              head_repo:$head_repo,head_ref:$head_ref,base_ref:$base_ref}}' \
            > payload.json

      - name: Preflight (token & target repo access)
        env:
          GH_TOKEN: ${{ secrets.AIBUDDY_DISPATCH_PAT }}
        run: |
          set -euo pipefail

          TARGET="hyperifyio/aibuddy"

          if [[ -z "${GH_TOKEN:-}" ]]; then
            echo "::error title=Missing secret::AIBUDDY_DISPATCH_PAT is not set."
            exit 1
          fi

          # Verify token can see the private repo; prints a helpful error otherwise
          if ! gh api "repos/$TARGET" >/dev/null 2>err.txt; then
            echo "::error title=Token cannot access target repo::$TARGET not accessible with provided token."
            cat err.txt || true
            exit 1
          fi

          # Validate payload JSON
          if [[ ! -s payload.json ]] || ! jq -e . payload.json >/dev/null; then
            echo "::error title=Invalid payload::payload.json missing or not valid JSON"
            [[ -f payload.json ]] && cat payload.json || true
            exit 1
          fi

      - name: Send repository_dispatch to aibuddy (gh api)
        env:
          GH_TOKEN: ${{ secrets.AIBUDDY_DISPATCH_PAT }}
        run: |
          set -euo pipefail
          gh api repos/hyperifyio/aibuddy/dispatches \
            --method POST \
            -H "Accept: application/vnd.github+json" \
            --input payload.json
          echo "repository_dispatch sent successfully."
