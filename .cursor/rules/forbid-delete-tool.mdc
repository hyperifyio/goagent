---
description: "Forbid any delete tool usage; require git rm for tracked paths and rm for all others"
alwaysApply: true
---

The goal of this rule is to ensure file and directory deletions are performed 
reliably via command line operations, never through an internal delete tool. 
This prevents hangs in non-interactive environments and preserves Git history 
when removing versioned paths.

The delete tool must not be used under any circumstances. When the target path 
is tracked by Git, perform the deletion with git rm so the change is staged and 
versioned. When the target is not tracked by Git, use rm. For directory 
removals, use a recursive option only when required, and apply force flags only 
when an obstruction is clearly understood and cannot be resolved otherwise.

Before deleting, determine whether the path is tracked to select the correct 
command. When a path should be removed from version control but kept in the 
working tree, use git rm --cached so the file remains on disk but is untracked. 
All deletions must be non-interactive and must not wait for user confirmation 
when executed from scripts.

After deletion, commit the staged changes with a clear, descriptive message to 
keep history readable. Update or remove any references to the deleted paths in 
build scripts, configurations, and imports in the same change. If the target is 
already absent, handle it as a warning without failing the workflow, record the 
event to logs, and proceed to the next step.
